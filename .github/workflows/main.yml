name: Verification & Deploy

on:
  push:
    branches:
      - main
      - feature/**

env:
  NODE_VERSION: 16
  RUBY_VERSION: 2.7.5

jobs:
  verification:
    name: Verification
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        id: node-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-modules-

      - name: Install packages
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: |
          yarn install

      - name: Lint & Test
        run: |
          yarn lint
          yarn test

  deploy-android:
    name: Deploy Android
    if: ${{ contains(github.event.head_commit.message, '[deploy-android]') }}
    runs-on: ubuntu-latest
    needs: [ verification ]
    env:
      FIREBASE_APP_ID_AOS: ${{ secrets.FIREBASE_APP_ID_AOS }}
      FIREBASE_TEST_GROUPS: ${{ secrets.FIREBASE_TEST_GROUPS }}
      FIREBASE_CLI_TOKEN: ${{ secrets.FIREBASE_CLI_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: false

      - name: Cache node modules
        uses: actions/cache@v2
        id: node-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-modules-

      - name: Cache bundle
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ env.RUBY_VERSION }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-${{ env.RUBY_VERSION }}

      - name: Install bundle
        run: |
          gem install bundler:2.3.6
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          cd android && bundle install --jobs 4 --retry 3 && cd ..

      - name: Install packages
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: |
          yarn install

      - name: Generate google-services.json
        run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > ./android/app/google-services.json

      - name: Deploy
        run: cd android && bundle exec fastlane beta && cd ..

  deploy-ios:
    name: Deploy iOS
    if: ${{ contains(github.event.head_commit.message, '[deploy-ios]') }}
    runs-on: macos-latest
    needs: [ verification ]
    env:
      FIREBASE_APP_ID_IOS: ${{ secrets.FIREBASE_APP_ID_IOS }}
      FIREBASE_TEST_GROUPS: ${{ secrets.FIREBASE_TEST_GROUPS }}
      FIREBASE_CLI_TOKEN: ${{ secrets.FIREBASE_CLI_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: false

      - name: Cache node modules
        uses: actions/cache@v2
        id: node-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-modules-

      - name: Cache bundle
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ env.RUBY_VERSION }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-${{ env.RUBY_VERSION }}

      - name: Install bundle
        run: |
          gem install bundler:2.3.6
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          cd ios && bundle install --jobs 4 --retry 3 && cd ..

      - name: Install packages
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Generate GoogleService-Info.plist
        run: echo '${{ secrets.GOOGLE_SERVICE_INFO_PLIST }}' > ./ios/RNStarter/GoogleService-Info.plist

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/RNStarter_Development_Provisioning.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Install pod
        run: yarn pod-release

      - name: Deploy
        run: cd ios && bundle exec fastlane beta && cd ..
